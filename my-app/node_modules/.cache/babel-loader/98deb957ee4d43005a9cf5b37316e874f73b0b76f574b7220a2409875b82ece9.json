{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lion\\\\Desktop\\\\train\\\\react-training\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./component/Header\";\nimport './App.css';\nimport Content from \"./component/Content\";\nimport Form from \"./component/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [arrayCourses, setArrayCourses] = useState([{\n    id: '1',\n    name: \"react\",\n    hours: 22,\n    day: 'Sundays',\n    src: ''\n  }, {\n    id: '2',\n    name: \"javascript\",\n    hours: 32,\n    day: 'Wednesdays',\n    src: ''\n  }, {\n    id: '3',\n    name: \"next\",\n    hours: 42,\n    day: 'Mondays',\n    src: ''\n  }]);\n  const handleInputChange = value => {\n    setInputValue(value);\n  };\n  const handleDelete = id => {\n    // Filter out the item with the provided id\n    const updatedCourses = arrayCourses.filter(course => course.id !== id);\n    // Update the state with the filtered array\n    setArrayCourses(updatedCourses);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      setLoggedIn: setLoggedIn,\n      inputValue: inputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        isLoggedIn: isLoggedIn,\n        setLoggedIn: setLoggedIn,\n        onInputChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        data: arrayCourses,\n        onDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"s3hc1T53pYSemm5WLSzP00DBkgY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Content","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setLoggedIn","inputValue","setInputValue","arrayCourses","setArrayCourses","id","name","hours","day","src","handleInputChange","value","handleDelete","updatedCourses","filter","course","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onInputChange","data","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Lion/Desktop/train/react-training/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./component/Header\";\nimport './App.css'\nimport Content from \"./component/Content\";\nimport Form from \"./component/Form\";\nconst App = () => {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [arrayCourses, setArrayCourses] = useState([\n    { id: '1', name: \"react\", hours: 22, day: 'Sundays', src: '' },\n    { id: '2', name: \"javascript\", hours: 32, day: 'Wednesdays', src: '' },\n    { id: '3', name: \"next\", hours: 42, day: 'Mondays', src: '' }\n  ]);\n  const handleInputChange = (value) => {\n    setInputValue(value);\n  };\n  const handleDelete = (id) => {\n    // Filter out the item with the provided id\n    const updatedCourses = arrayCourses.filter(course => course.id !== id);\n    // Update the state with the filtered array\n    setArrayCourses(updatedCourses);\n  };\n  return (\n    <>\n  \n      <Header isLoggedIn={isLoggedIn} setLoggedIn={setLoggedIn} inputValue={inputValue}/>\n      <div className=\"container\">\n          <Form isLoggedIn={isLoggedIn} setLoggedIn={setLoggedIn} onInputChange={handleInputChange}/>\n          <Content data={arrayCourses} onDelete={handleDelete}/>\n      </div>\n      \n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAC/C;IAAEgB,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAG,CAAC,EAC9D;IAAEJ,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,YAAY;IAAEC,GAAG,EAAE;EAAG,CAAC,EACtE;IAAEJ,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,EAAE;IAAEC,GAAG,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAG,CAAC,CAC9D,CAAC;EACF,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCT,aAAa,CAACS,KAAK,CAAC;EACtB,CAAC;EACD,MAAMC,YAAY,GAAIP,EAAE,IAAK;IAC3B;IACA,MAAMQ,cAAc,GAAGV,YAAY,CAACW,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACV,EAAE,KAAKA,EAAE,CAAC;IACtE;IACAD,eAAe,CAACS,cAAc,CAAC;EACjC,CAAC;EACD,oBACEnB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBAEEtB,OAAA,CAACJ,MAAM;MAACS,UAAU,EAAEA,UAAW;MAACC,WAAW,EAAEA,WAAY;MAACC,UAAU,EAAEA;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnF1B,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACtBtB,OAAA,CAACF,IAAI;QAACO,UAAU,EAAEA,UAAW;QAACC,WAAW,EAAEA,WAAY;QAACsB,aAAa,EAAEZ;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3F1B,OAAA,CAACH,OAAO;QAACgC,IAAI,EAAEpB,YAAa;QAACqB,QAAQ,EAAEZ;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA,eAEN,CAAC;AAEP,CAAC;AAACtB,EAAA,CA5BID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}